version: '3'  # 使用docker-compose版本3
services:  # 定义服务
  mysql_master:  # 定义一个名为mysql_master的服务
    image: mysql:8.0.20  # 使用MySQL 8.0.20镜像
    container_name: mysql-master  # 指定容器名称为mysql_master
    restart: unless-stopped  # 在容器退出时自动重新启动
    command:  # 容器启动时执行的命令
      - --server-id=1  # 设置MySQL服务器的ID为1，用于复制
      - --relay_log=relay-log # 开启中继日志
      - --binlog-ignore-db=mysql  # 忽略在binlog中记录的数据库，这里为mysql
      - --skip-name-resolve  # 禁用DNS解析
      - --innodb_flush_log_at_trx_commit=1  # 每个事务提交时将日志写入磁盘
      - --sync-binlog=1  # 立即将binlog写入磁盘
      - --innodb_flush_method=O_DIRECT  # 使用直接IO刷新InnoDB缓冲区
      - --log-bin=master-log   # 开启二进制日志
      - --log_bin-index=master-bin.index  # 指定binlog索引文件名
      - --max_connections=500  # 最大的并发连接数
      - --max_connect_errors=100  # 连接错误的最大次数
      - --character-set-server=utf8  # 设置服务器的字符集为UTF-8
      - --default-storage-engine=INNODB  # 设置默认存储引擎为InnoDB
      - --default_authentication_plugin=mysql_native_password  # 设置默认身份验证插件为mysql_native_password
      - --expire-logs-days=7  # 设置binlog日志自动删除的天数为7天
      - --binlog-ignore-db=information_schema  # 忽略在binlog中记录的数据库，这里为information_schema
      - --binlog-ignore-db=performance_schema  # 忽略在binlog中记录的数据库，这里为performance_schema
      - --binlog-ignore-db=sys  # 忽略在binlog中记录的数据库，这里为sys
      - --gtid_mode=on  # 开启全局事务标识
      - --enforce_gtid_consistency=on  # 强制全局事务标识的一致性
      - --binlog_format=mixed  # 二进制日志的格式为混合模式
      - --sync_binlog=1  # 立即将binlog写入磁盘
      - --default_storage_engine=InnoDB  # 默认的存储引擎是InnoDB
      - --performance_schema_max_table_instances=400  # 性能模式中最大的表实例数
      - --table_definition_cache=400  # 表定义缓存的大小
      - --skip-external-locking  # 跳过外部锁定
      - --max_allowed_packet=100G  # 数据包的最大大小
      - --table_open_cache=512  # 表缓存的大小
      - --sort_buffer_size=2M  # 排序缓冲区的大小
      - --net_buffer_length=4K  # 网络缓冲区的长度
      - --read_buffer_size=2M  # 读缓冲区的大小
      - --read_rnd_buffer_size=256K  # 随机读缓冲区的大小
      - --thread_cache_size=64  # 线程缓存的大小
      - --tmp_table_size=64M  # 临时表的大小
      - --lower_case_table_names=1  # 表名是否区分大小写，1表示不区分大小写
      - --sql-mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES  # SQL模式
      - --explicit_defaults_for_timestamp=true  # 如果设置为true，则对于TIMESTAMP列，使用显式DEFAULT CURRENT_TIMESTAMP和ON UPDATE CURRENT_TIMESTAMP定义
      - --skip-name-resolve  # 跳过DNS解析
      - --open_files_limit=65535  # 可打开文件的数量限制
      - --binlog_expire_logs_seconds=600000  # 当二进制日志文件超过指定秒数时，将被自动删除
      - --slow_query_log=1  # 启用慢查询日志
      - --long_query_time=3  # 超过指定秒数的查询将被认为是慢查询
      - --log_queries_not_using_indexes=on  # 记录未使用索引的查询
      - --innodb_buffer_pool_size=512M  # InnoDB缓冲池的大小
      - --innodb_log_file_size=256M  # InnoDB日志文件的大小
      - --innodb_log_buffer_size=64M  # InnoDB日志缓冲区的大小
      - --innodb_flush_log_at_trx_commit=1  # 每次事务提交时，是否将日志缓冲区的内容刷新到磁盘
      - --innodb_lock_wait_timeout=50  # InnoDB锁等待超时时间
      - --innodb_max_dirty_pages_pct=90  # InnoDB脏页的最大百分比
      - --innodb_read_io_threads=8  # InnoDB读线程的数量
      - --innodb_write_io_threads=8  # InnoDB写线程的数量
    ports:  # 定义容器和主机之间的端口映射
      - "33061:3306"  # 将容器的3306端口映射到主机的33061端口
    environment:  # 定义环境变量
      MYSQL_ROOT_PASSWORD: 1024  # 设置MySQL的root用户密码为1024
      TZ: "Asia/Shanghai" #解决时区问题
    volumes:  # 定义数据卷
      - ./mysql:/var/lib/mysql  # 将本地的master目录挂载到容器的/var/lib/mysql目录中
